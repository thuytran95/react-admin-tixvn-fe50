[{"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\index.js":"1","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\reportWebVitals.js":"2","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\App.js":"3","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\store.js":"4","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\globalStyle.js":"5","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\index.js":"6","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\user.action.js":"7","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\root.reducer.js":"8","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\routes\\index.js":"9","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\shadows.js":"10","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\typography.js":"11","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\PageNotFound\\index.js":"12","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\index.js":"13","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\constants\\user.constants.js":"14","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Login\\index.jsx":"15","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\user.reducer.js":"16","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\utils\\setHeaders.js":"17","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\movie.reducer.js":"18","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\TopBar.js":"19","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Login\\style.js":"20","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\constants\\movie.constants.js":"21","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\MoviePage\\index.js":"22","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\index.js":"23","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\index.js":"24","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\Navbar\\index.js":"25","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\index.js":"26","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\Logo.js":"27","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Dashboard\\index.jsx":"28","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\Loader\\index.js":"29","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\dataSelect.js":"30","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\pages\\userPageStyle.js":"31","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\user.service.js":"32","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikSelect.js":"33","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikTextField.js":"34","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikRadioGroup.js":"35","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\movie.service.js":"36","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\Navbar\\NavItem.js":"37","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\Toolbar.js":"38","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\Page.js":"39","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\pages\\moviePageStyle.js":"40","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\movie.action.js":"41","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\MoviePage\\Toolbar.js":"42","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\CustomImageInput\\CustomImageInput.js":"43","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\utils\\index.js":"44","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\MovieCard\\index.js":"45","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\CustomImageInput\\CustomImageInputStyle.js":"46","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\components\\movieCardStyle.js":"47","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\CreateShowtimes\\index.js":"48","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\StickyHeadTable\\index.jsx":"49"},{"size":1163,"mtime":1610448765686,"results":"50","hashOfConfig":"51"},{"size":375,"mtime":1610448765693,"results":"52","hashOfConfig":"51"},{"size":1419,"mtime":1610448765682,"results":"53","hashOfConfig":"51"},{"size":351,"mtime":1610448765693,"results":"54","hashOfConfig":"51"},{"size":772,"mtime":1610448765683,"results":"55","hashOfConfig":"51"},{"size":578,"mtime":1610448765694,"results":"56","hashOfConfig":"51"},{"size":4700,"mtime":1610464480969,"results":"57","hashOfConfig":"51"},{"size":301,"mtime":1610448765693,"results":"58","hashOfConfig":"51"},{"size":559,"mtime":1610450007461,"results":"59","hashOfConfig":"51"},{"size":1645,"mtime":1610448765694,"results":"60","hashOfConfig":"51"},{"size":579,"mtime":1610448765694,"results":"61","hashOfConfig":"51"},{"size":224,"mtime":1610448765690,"results":"62","hashOfConfig":"51"},{"size":1731,"mtime":1610448765689,"results":"63","hashOfConfig":"51"},{"size":827,"mtime":1610448765692,"results":"64","hashOfConfig":"51"},{"size":3066,"mtime":1610448765689,"results":"65","hashOfConfig":"51"},{"size":2261,"mtime":1610448765693,"results":"66","hashOfConfig":"51"},{"size":413,"mtime":1610448765695,"results":"67","hashOfConfig":"51"},{"size":2416,"mtime":1610452458531,"results":"68","hashOfConfig":"51"},{"size":2115,"mtime":1610448765688,"results":"69","hashOfConfig":"51"},{"size":567,"mtime":1610448765689,"results":"70","hashOfConfig":"51"},{"size":1245,"mtime":1610451971939,"results":"71","hashOfConfig":"51"},{"size":16782,"mtime":1610448765690,"results":"72","hashOfConfig":"51"},{"size":17522,"mtime":1610448765691,"results":"73","hashOfConfig":"51"},{"size":77,"mtime":1610448765691,"results":"74","hashOfConfig":"51"},{"size":2853,"mtime":1610448765688,"results":"75","hashOfConfig":"51"},{"size":186,"mtime":1610448765693,"results":"76","hashOfConfig":"51"},{"size":149,"mtime":1610448765683,"results":"77","hashOfConfig":"51"},{"size":140,"mtime":1610448765689,"results":"78","hashOfConfig":"51"},{"size":514,"mtime":1610448765686,"results":"79","hashOfConfig":"51"},{"size":698,"mtime":1610448765691,"results":"80","hashOfConfig":"51"},{"size":812,"mtime":1610448765684,"results":"81","hashOfConfig":"51"},{"size":1485,"mtime":1610448765694,"results":"82","hashOfConfig":"51"},{"size":1102,"mtime":1610448765685,"results":"83","hashOfConfig":"51"},{"size":1141,"mtime":1610448765685,"results":"84","hashOfConfig":"51"},{"size":1321,"mtime":1610448765685,"results":"85","hashOfConfig":"51"},{"size":2351,"mtime":1610453160319,"results":"86","hashOfConfig":"51"},{"size":1433,"mtime":1610448765688,"results":"87","hashOfConfig":"51"},{"size":1774,"mtime":1610448765691,"results":"88","hashOfConfig":"51"},{"size":457,"mtime":1610448765683,"results":"89","hashOfConfig":"51"},{"size":637,"mtime":1610448765684,"results":"90","hashOfConfig":"51"},{"size":5829,"mtime":1610464432925,"results":"91","hashOfConfig":"51"},{"size":1750,"mtime":1610448765690,"results":"92","hashOfConfig":"51"},{"size":2905,"mtime":1610448765685,"results":"93","hashOfConfig":"51"},{"size":1124,"mtime":1610448765695,"results":"94","hashOfConfig":"51"},{"size":3645,"mtime":1610451078493,"results":"95","hashOfConfig":"51"},{"size":770,"mtime":1610448765685,"results":"96","hashOfConfig":"51"},{"size":910,"mtime":1610448765683,"results":"97","hashOfConfig":"51"},{"size":11703,"mtime":1610451176463,"results":"98","hashOfConfig":"51"},{"size":6069,"mtime":1610464264111,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1ksr2wu",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\index.js",[],["209","210"],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\reportWebVitals.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\App.js",["211"],"import { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\nimport DashboardLayout from \"./layout/DashboardLayout\";\r\nimport { routeAdmin } from \"./routes\";\r\nimport { useEffect } from \"react\";\r\nimport { actTryLogin } from \"./redux/actions/user.action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App(props) {\r\n  const showLayoutAdmin = (routes) => {\r\n    if (routes && routes.length > 0) {\r\n      return routes.map((item, index) => {\r\n        return (\r\n          <DashboardLayout\r\n            key={index}\r\n            exact={item.exact}\r\n            path={item.path}\r\n            Component={item.component}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(props);\r\n    props.fetchTryLogin(props.history);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {showLayoutAdmin(routeAdmin)}\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dangky\"></Route>\r\n        <Route path=\"\">\r\n          <PageNotFound />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTryLogin: (history) => {\r\n      dispatch(actTryLogin(history));\r\n    },\r\n  };\r\n};\r\n\r\nconst connectedComponent = connect(null, mapDispatchToProps)(App);\r\n\r\nexport default withRouter(connectedComponent);\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\store.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\globalStyle.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\user.action.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\root.reducer.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\routes\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\shadows.js",["212"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\theme\\typography.js",["213"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\PageNotFound\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\constants\\user.constants.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Login\\index.jsx",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\user.reducer.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\utils\\setHeaders.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\reducers\\movie.reducer.js",["214"],"import {\r\n  ADD_MOVIE_FAILED,\r\n  ADD_MOVIE_SUCESS,\r\n  DELETE_MOVIE_FAILED,\r\n  DELETE_MOVIE_SUCESS,\r\n  GET_MOVIE_LIST_FAILED,\r\n  GET_MOVIE_LIST_REQUEST,\r\n  GET_MOVIE_LIST_SUCESS,\r\n  UPDATE_MOVIE_FAILED,\r\n  UPDATE_MOVIE_SUCESS,\r\n  GET_INFOMATION_SHOWTIME_SUCESS,\r\n  GET_INFOMATION_BY_THEATER_CLUSTERS_SUCESS,\r\n  CREATE_SCHEDULE_SUCESS,\r\n  CREATE_SCHEDULE_FAILED,\r\n  GET_MOVIE_SCHEDULE_FAILED,\r\n  GET_MOVIE_SCHEDULE_SUCESS\r\n} from \"../constants/movie.constants\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  movieList: null,\r\n  err: null,\r\n  movieAdd: null,\r\n  movieDelete: null,\r\n  movieUpdate: null,\r\n  newSchedule: null,\r\n  errAdd: null,\r\n  errDelete: null,\r\n  errUpdate: null,\r\n  errCreateSchedule: null,\r\n  infomatinShowTime: \"\",\r\n  cinemaInformationTheater: null,\r\n  movieScheduleList:null,\r\n};\r\n\r\nconst MovieReducer = (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case GET_MOVIE_LIST_REQUEST:\r\n      return { ...state, loading: true };\r\n    case GET_MOVIE_LIST_SUCESS:\r\n      return { ...state, loading: false, movieList: payload };\r\n    case GET_MOVIE_LIST_FAILED:\r\n      return { ...state, loading: false, movieList: null, err: payload };\r\n    case ADD_MOVIE_SUCESS: {\r\n      return { ...state, movieAdd: payload };\r\n    }\r\n    case ADD_MOVIE_FAILED:\r\n      return { ...state, movie: null, errAdd: payload };\r\n    case DELETE_MOVIE_SUCESS: {\r\n      // tim vi tri phan tu xoa\r\n      let movieList = state.movieList;\r\n      movieList = movieList.filter((item) => item.maPhim !== payload);\r\n      state.movieList = movieList;\r\n      return { ...state };\r\n    }\r\n    case DELETE_MOVIE_FAILED:\r\n      return { ...state, errDelete: payload };\r\n    case UPDATE_MOVIE_SUCESS:\r\n      return { ...state, movieUpdate: payload };\r\n    case UPDATE_MOVIE_FAILED:\r\n      return { ...state, errUpdate: payload };\r\n    case GET_INFOMATION_SHOWTIME_SUCESS:\r\n      return { ...state, infomatinShowTime: payload };\r\n    case GET_INFOMATION_BY_THEATER_CLUSTERS_SUCESS:\r\n      return { ...state, cinemaInformationTheater: payload };\r\n    case CREATE_SCHEDULE_SUCESS:\r\n      return { ...state, newSchedule: payload };\r\n    case CREATE_SCHEDULE_FAILED:\r\n      return { ...state, errCreateSchedule: payload };\r\n    case GET_MOVIE_SCHEDULE_SUCESS:\r\n      return {...state,movieScheduleList:payload};\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default MovieReducer;\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\TopBar.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Login\\style.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\constants\\movie.constants.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\MoviePage\\index.js",["215","216","217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport format from \"date-format\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  colors,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { Page } from \"../../assets/jss/admin-jss/Page\";\r\nimport { Loader } from \"../../components/Loader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport {\r\n  actAddMovieRequest,\r\n  actUpdateMovieRequest,\r\n  getMovieListRequest,\r\n} from \"../../redux/actions/movie.action\";\r\nimport MovieCard from \"../../components/MovieCard\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { movieSchema } from \"../../service/movie.service\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport styles from \"../../assets/jss/admin-jss/pages/moviePageStyle\";\r\nimport styleCss from \"./moviePageStyle.css\";\r\nimport CustomImageInput from \"../../components/FormilkCustomLayout/CustomImageInput/CustomImageInput\";\r\nimport {\r\n  FormikTextField,\r\n  FormikTextFieldMultiline,\r\n} from \"../../components/FormilkCustomLayout/FormikTextField\";\r\nimport { nonAccentVietnamese } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst MoviePage = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, movieList } = props;\r\n\r\n  const movieAdd = useSelector((state) => state.movie.movieAdd);\r\n  const movieUpdate = useSelector((state) => state.movie.movieUpdate);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getMovieListRequest());\r\n  }, [movieAdd, movieUpdate]);\r\n\r\n  // xử lý form thêm phimNf\r\n  const [initialValues, setInitialValues] = useState({\r\n    maPhim: 0,\r\n    tenPhim: \"\",\r\n    biDanh: \"\",\r\n    trailer: \"\",\r\n    hinhAnh: undefined,\r\n    moTa: \"\",\r\n    maNhom: \"GP01\",\r\n    ngayKhoiChieu: null, // if date is defined as '' yup will throw a invalid date error\r\n    danhGia: 0,\r\n  });\r\n\r\n  // handle modal\r\n  const [titleModal, setTitleModal] = useState({ header: \"\", action: \"\" });\r\n\r\n  // set modal open\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setTitleModal({ header: \"Thêm phim\", action: \"Thêm\" });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTitleModal({ header: \"\", action: \"\" });\r\n    setInitialValues({\r\n      maPhim: 0,\r\n      tenPhim: \"\",\r\n      biDanh: \"\",\r\n      trailer: \"\",\r\n      hinhAnh: undefined,\r\n      moTa: \"\",\r\n      maNhom: \"GP01\",\r\n      ngayKhoiChieu: null, // if date is defined as '' yup will throw a invalid date error\r\n      danhGia: 0,\r\n    });\r\n  };\r\n\r\n  // set show the image when upate movie\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleSubmit = (values) => {\r\n    // console.log(values);\r\n    // console.log(values.hinhAnh.name);\r\n\r\n    // chuyen doi sang form data --> yeu cau tren api\r\n    let form_data = new FormData();\r\n    for (let key in values) {\r\n      // format ngay chieu ve dung dinh dang tren api\r\n      if (key === \"ngayKhoiChieu\") {\r\n        const formatDate = format(\"dd/MM/yyyy\", new Date(values[key]));\r\n        console.log(formatDate);\r\n        form_data.append(key, formatDate);\r\n      } else {\r\n        form_data.append(key, values[key]);\r\n      }\r\n    }\r\n    // console.log(form_data);\r\n    dispatch(actAddMovieRequest(form_data));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleUpdate = (values) => {\r\n    // const newValues = { ...values, hinhAnh: null };\r\n    // console.log(newValues);\r\n    console.log(values);\r\n    const newValue = { ...values };\r\n    for (let key in values) {\r\n      if (key === \"ngayKhoiChieu\") {\r\n        const formatDate = format(\"dd/MM/yyyy\", new Date(values[key]));\r\n        newValue.ngayKhoiChieu = formatDate;\r\n      }\r\n    }\r\n    dispatch(actUpdateMovieRequest(newValue));\r\n    setOpen(false);\r\n  };\r\n\r\n  const [searchList, setSearchList] = useState(null);\r\n\r\n  const handleSearch = (e) => {\r\n    console.log(e.target.value);\r\n    let keyword = e.target.value;\r\n    if (keyword) {\r\n      let result = [];\r\n\r\n      for (let i in movieList) {\r\n        let { tenPhim } = movieList[i];\r\n\r\n        // convert keyword - tenPhim\r\n        keyword = nonAccentVietnamese(keyword).trim(); //loai bo space du truoc va sau keyword\r\n        tenPhim = nonAccentVietnamese(tenPhim);\r\n\r\n        if (tenPhim.indexOf(keyword) !== -1) {\r\n          result.push(movieList[i]);\r\n        }\r\n      }\r\n      // console.log(result);\r\n      setSearchList(result);\r\n    } else {\r\n      setSearchList(null);\r\n    }\r\n  };\r\n\r\n  // set pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const MOVIE_PER_PAGE = 8;\r\n  const offset = currentPage * MOVIE_PER_PAGE;\r\n\r\n  const currentPageData = () => {\r\n    if (searchList) {\r\n      return searchList.map((movie) => (\r\n        <Grid item key={movie.maPhim} lg={3} md={4} sm={6} xs={12}>\r\n          <MovieCard\r\n            className={classes.movieCard}\r\n            movie={movie}\r\n            setInitialValues={setInitialValues}\r\n            setTitleModal={setTitleModal}\r\n            setImage={setImage}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      ));\r\n    } else {\r\n      return movieList?.slice(offset, offset + MOVIE_PER_PAGE).map((movie) => (\r\n        <Grid item key={movie.maPhim} lg={3} md={4} sm={6} xs={12}>\r\n          <MovieCard\r\n            className={classes.movieCard}\r\n            movie={movie}\r\n            setInitialValues={setInitialValues}\r\n            setTitleModal={setTitleModal}\r\n            setImage={setImage}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      ));\r\n    }\r\n  };\r\n\r\n  const pageCount = Math.ceil(movieList?.length / MOVIE_PER_PAGE);\r\n\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n\r\n  const renderHTML = () => {\r\n    if (loading) return <Loader />;\r\n    if (movieList) {\r\n      return (\r\n        <Page title=\"Movies\" className={classes.root}>\r\n          <Container maxWidth={false}>\r\n            <Toolbar\r\n              handleClickOpen={handleClickOpen}\r\n              handleSearch={handleSearch}\r\n            />\r\n            <Box mt={3}>\r\n              <Grid container spacing={3}>\r\n                {currentPageData()}\r\n              </Grid>\r\n            </Box>\r\n            <Box mt={3} display=\"flex\" justifyContent=\"center\">\r\n              {!searchList ? (\r\n                <ReactPaginate\r\n                  previousLabel={<NavigateBeforeIcon />}\r\n                  nextLabel={<NavigateNextIcon />}\r\n                  pageCount={pageCount}\r\n                  onPageChange={handlePageClick}\r\n                  containerClassName={\"pagination\"}\r\n                  previousLinkClassName={\"pagination__link\"}\r\n                  nextLinkClassName={\"pagination__link\"}\r\n                  disabledClassName={\"pagination__link--disabled\"}\r\n                  activeClassName={\"pagination__link--active\"}\r\n                  style={{ width: \"50%\" }}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Box>\r\n            <Dialog\r\n              className={classes.root}\r\n              fullWidth\r\n              open={open}\r\n              onClose={handleClose}\r\n              scroll=\"body\"\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\" className={classes.root}>\r\n                {titleModal.header}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <Formik\r\n                  initialValues={initialValues}\r\n                  validationSchema={movieSchema}\r\n                  onSubmit={\r\n                    titleModal.action === \"Thêm\" ? handleSubmit : handleUpdate\r\n                  }\r\n                >\r\n                  {(formikProps) => {\r\n                    // console.log(formikProps);\r\n                    return (\r\n                      <Form>\r\n                        <Grid container style={{ width: \"100%\" }} spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <FormikTextField\r\n                              name=\"maPhim\"\r\n                              label=\"Mã phim\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <FormikTextField\r\n                              name=\"tenPhim\"\r\n                              label=\"Tên phim\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <FormikTextField\r\n                              name=\"biDanh\"\r\n                              label=\"Bí danh\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12}>\r\n                            <FormikTextField\r\n                              name=\"trailer\"\r\n                              label=\"Trailer\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n                          {titleModal.action === \"Thêm\" ? (\r\n                            <Grid item xs={12}>\r\n                              <div className=\"form-group\">\r\n                                <label>Hình ảnh</label>\r\n                                <Field\r\n                                  name=\"hinhAnh\"\r\n                                  component={CustomImageInput}\r\n                                  tilte=\"Hình ảnh\"\r\n                                  touched={formikProps.touched[\"file\"]}\r\n                                  setFieldValue={formikProps.setFieldValue}\r\n                                  onBlur={formikProps.handleBlur}\r\n                                  errorMessage={\r\n                                    formikProps.errors[\"hinhAnh\"]\r\n                                      ? formikProps.errors[\"hinhAnh\"]\r\n                                      : undefined\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </Grid>\r\n                          ) : (\r\n                            <Grid\r\n                              item\r\n                              xs={12}\r\n                              style={{ height: \"500px\", marginBottom: \"50px\" }}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <FormikTextField\r\n                                  name=\"hinhAnh\"\r\n                                  label=\"Hinh ảnh\"\r\n                                  type=\"text\"\r\n                                  disabled\r\n                                  value={null}\r\n                                />\r\n                              </Grid>\r\n                              <img\r\n                                src={image}\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  height: \"100%\",\r\n                                  objectFit: \"cover\",\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          )}\r\n\r\n                          <Grid item xs={12}>\r\n                            <FormikTextFieldMultiline\r\n                              rows={3}\r\n                              name=\"moTa\"\r\n                              label=\"Mô tả\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <KeyboardDatePicker\r\n                                name=\"ngayKhoiChieu\"\r\n                                label=\"Ngày khởi chiếu\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={formikProps.values.ngayKhoiChieu}\r\n                                onChange={(value) =>\r\n                                  formikProps.setFieldValue(\r\n                                    \"ngayKhoiChieu\",\r\n                                    value\r\n                                  )\r\n                                }\r\n                                KeyboardButtonProps={{\r\n                                  \"aria-label\": \"change date\",\r\n                                }}\r\n                                errorMessage={\r\n                                  formikProps.errors[\"ngayKhoiChieu\"]\r\n                                    ? formikProps.errors[\"ngayKhoiChieu\"]\r\n                                    : undefined\r\n                                }\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12}>\r\n                            <FormikTextField\r\n                              name=\"danhGia\"\r\n                              label=\"Đánh giá\"\r\n                              type=\"text\"\r\n                              onChange={formikProps.handleChange}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <div className=\"form-group text-left\">\r\n                              <label>Mã nhóm:</label>\r\n                              <Field\r\n                                as=\"select\"\r\n                                className=\"form-control\"\r\n                                name=\"maNhom\"\r\n                                onChange={formikProps.handleChange}\r\n                              >\r\n                                <option>GP01</option>\r\n                                <option>GP02</option>\r\n                                <option>GP03</option>\r\n                                <option>GP04</option>\r\n                                <option>GP05</option>\r\n                                <option>GP06</option>\r\n                                <option>GP07</option>\r\n                                <option>GP08</option>\r\n                                <option>GP09</option>\r\n                                <option>GP10</option>\r\n                              </Field>\r\n                              <ErrorMessage name=\"maNhom\">\r\n                                {(message) => (\r\n                                  <div className=\"alert text-danger alert-validation \">\r\n                                    {message}\r\n                                  </div>\r\n                                )}\r\n                              </ErrorMessage>\r\n                            </div>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <div className={classes.buttonGroup}>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            color=\"secondary\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            {titleModal.action}\r\n                          </Button>\r\n                          <Button\r\n                            style={{\r\n                              marginLeft: 10,\r\n                              backgroundColor: colors.red[500],\r\n                              color: \"white\",\r\n                            }}\r\n                            variant=\"contained\"\r\n                            onClick={handleClose}\r\n                          >\r\n                            Thoát\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </Container>\r\n        </Page>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <>{renderHTML()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { loading: state.movie.loading, movieList: state.movie.movieList };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MoviePage);\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\index.js",["219","220"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Loader } from \"../../components/Loader\";\r\nimport {\r\n  actAddUserRequest,\r\n  actDeleteUserRequest,\r\n  actUpdateUserRequest,\r\n  getUserListRequest,\r\n} from \"../../redux/actions/user.action\";\r\nimport {\r\n  Container,\r\n  TablePagination,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  TableBody,\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Button,\r\n  makeStyles,\r\n  Card,\r\n  Grid,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Page } from \"../../assets/jss/admin-jss/Page\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { capitalizeWords, nonAccentVietnamese } from \"../../utils\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport { signUpUserSchema } from \"../../service/user.service\";\r\nimport { dataSelect, radioList } from \"./dataSelect\";\r\nimport { FormikRadioGroup } from \"../../components/FormilkCustomLayout/FormikRadioGroup\";\r\nimport { FormikTextField } from \"../../components/FormilkCustomLayout/FormikTextField\";\r\nimport { FormikSelect } from \"../../components/FormilkCustomLayout/FormikSelect\";\r\nimport styles from \"../../assets/jss/admin-jss/pages/userPageStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserPage(props) {\r\n  const classes = useStyles();\r\n  const { loading, errAdd, userList } = props;\r\n\r\n  // call API\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserListRequest());\r\n  }, []);\r\n\r\n  // set Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, userList?.length - page * rowsPerPage);\r\n\r\n  // set initialvalue in formik\r\n  const [initialValue, setInitialValue] = useState({\r\n    taiKhoan: \"\",\r\n    matKhau: \"\",\r\n    hoTen: \"\",\r\n    soDt: \"\",\r\n    maNhom: \"GP01\",\r\n    email: \"\",\r\n    maLoaiNguoiDung: \"\",\r\n  });\r\n\r\n  // set titleModal\r\n  const [titleModal, setTitleModal] = useState({ header: \"\", action: \"\" });\r\n\r\n  // handle modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setTitleModal({ header: \"Thêm người dùng\", action: \"Thêm\" });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTitleModal({ header: \"\", action: \"\" });\r\n    setInitialValue({\r\n      taiKhoan: \"\",\r\n      matKhau: \"\",\r\n      hoTen: \"\",\r\n      soDt: \"\",\r\n      maNhom: \"GP01\",\r\n      email: \"\",\r\n      maLoaiNguoiDung: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(actAddUserRequest(values));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmitUpdate = (values) => {\r\n    // console.log(values);\r\n\r\n    dispatch(actUpdateUserRequest(values));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = (values) => {\r\n    console.log(values);\r\n    dispatch(actDeleteUserRequest(values));\r\n  };\r\n\r\n  const [searchList, setSearchList] = useState(null);\r\n\r\n  const handleSearch = (e) => {\r\n    let keyWord = e.target.value;\r\n    if (keyWord) {\r\n      let resultList = [];\r\n\r\n      // tim kiem ten nguoi dung\r\n\r\n      // duyet tuwng phan tu trong mangr movieList\r\n      for (let i in userList) {\r\n        // convert keyword - name user\r\n        let { hoTen } = userList[i];\r\n\r\n        hoTen = nonAccentVietnamese(hoTen);\r\n\r\n        keyWord = nonAccentVietnamese(keyWord).trim();\r\n\r\n        if (hoTen.indexOf(keyWord) !== -1) {\r\n          resultList.push(userList[i]);\r\n        }\r\n      }\r\n      // console.log(resultList);\r\n      setSearchList(resultList);\r\n    } else {\r\n      setSearchList(null);\r\n    }\r\n  };\r\n\r\n  const renderUserPage = () => {\r\n    if (loading) return <Loader />;\r\n    if (userList)\r\n      return (\r\n        <Page className={classes.page} title=\"Users\">\r\n          <Container maxWidth={false}>\r\n            <Toolbar\r\n              handleClickOpen={handleClickOpen}\r\n              handleSearch={handleSearch}\r\n            />\r\n            <Box mt={3}>\r\n              <Card className={classes.root}>\r\n                <PerfectScrollbar>\r\n                  <Box minWidth={1050}>\r\n                    <Table>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell className={classes.thead}>\r\n                            Mã loại người dùng\r\n                          </TableCell>\r\n                          <TableCell className={classes.thead} align=\"left\">\r\n                            Họ tên\r\n                          </TableCell>\r\n                          <TableCell className={classes.thead} align=\"left\">\r\n                            Tài khoản\r\n                          </TableCell>\r\n                          <TableCell className={classes.thead} align=\"left\">\r\n                            Email\r\n                          </TableCell>\r\n\r\n                          <TableCell className={classes.thead} align=\"left\">\r\n                            Quản lý\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {!searchList\r\n                          ? userList\r\n                              ?.slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                              )\r\n                              .map((user, index) => {\r\n                                const {\r\n                                  taiKhoan,\r\n                                  matKhau,\r\n                                  hoTen,\r\n                                  email,\r\n                                  soDt,\r\n                                  maNhom,\r\n                                  maLoaiNguoiDung,\r\n                                } = user;\r\n                                if (!maNhom) {\r\n                                  user.maNhom = \"GP01\";\r\n                                }\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell align=\"left\">\r\n                                      {user.maLoaiNguoiDung === \"KhachHang\"\r\n                                        ? \"Khách Hàng\"\r\n                                        : \"Quản trị\"}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {capitalizeWords(hoTen)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {taiKhoan}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{email}</TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      <EditIcon\r\n                                        color=\"primary\"\r\n                                        onClick={() => {\r\n                                          setTitleModal({\r\n                                            header:\r\n                                              \"Cập nhật thông tin người dùng\",\r\n                                            action: \"Cập nhật\",\r\n                                          });\r\n                                          setInitialValue({\r\n                                            taiKhoan,\r\n                                            matKhau,\r\n                                            hoTen,\r\n                                            soDt,\r\n                                            maNhom,\r\n                                            email,\r\n                                            maLoaiNguoiDung,\r\n                                          });\r\n                                          setOpen(true);\r\n                                        }}\r\n                                      />\r\n                                      <DeleteIcon\r\n                                        className={classes.deleteIcon}\r\n                                        onClick={() => {\r\n                                          handleDelete(taiKhoan);\r\n                                        }}\r\n                                      />\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })\r\n                          : searchList.map((user, index) => {\r\n                              const {\r\n                                taiKhoan,\r\n                                matKhau,\r\n                                hoTen,\r\n                                email,\r\n                                soDt,\r\n                                maNhom,\r\n                                maLoaiNguoiDung,\r\n                              } = user;\r\n                              if (!maNhom) {\r\n                                user.maNhom = \"GP01\";\r\n                              }\r\n                              return (\r\n                                <TableRow key={index}>\r\n                                  <TableCell align=\"left\">\r\n                                    {user.maLoaiNguoiDung === \"KhachHang\"\r\n                                      ? \"Khách Hàng\"\r\n                                      : \"Quản trị\"}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                    {capitalizeWords(hoTen)}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{taiKhoan}</TableCell>\r\n                                  <TableCell align=\"left\">{email}</TableCell>\r\n                                  <TableCell align=\"left\">\r\n                                    <EditIcon\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        setTitleModal({\r\n                                          header:\r\n                                            \"Cập nhật thông tin người dùng\",\r\n                                          action: \"Cập nhật\",\r\n                                        });\r\n                                        setInitialValue({\r\n                                          taiKhoan,\r\n                                          matKhau,\r\n                                          hoTen,\r\n                                          soDt,\r\n                                          maNhom,\r\n                                          email,\r\n                                          maLoaiNguoiDung,\r\n                                        });\r\n                                        setOpen(true);\r\n                                      }}\r\n                                    />\r\n                                    <DeleteIcon\r\n                                      className={classes.deleteIcon}\r\n                                      onClick={() => {\r\n                                        handleDelete(taiKhoan);\r\n                                      }}\r\n                                    />\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n\r\n                        {emptyRows > 0 && (\r\n                          <TableRow style={{ height: 62 * emptyRows }}>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Box>\r\n                </PerfectScrollbar>\r\n                {!searchList ? (\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 20, 30]}\r\n                    component=\"div\"\r\n                    count={userList?.length}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    rowsPerPage={rowsPerPage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card>\r\n            </Box>\r\n          </Container>\r\n        </Page>\r\n      );\r\n  };\r\n  return (\r\n    <div>\r\n      {renderUserPage()}\r\n      <Dialog\r\n        fullWidth\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"body\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.root}>\r\n          {titleModal.header}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Formik\r\n            initialValues={initialValue}\r\n            validationSchema={signUpUserSchema}\r\n            onSubmit={\r\n              titleModal.action === \"Thêm\" ? handleSubmit : handleSubmitUpdate\r\n            }\r\n          >\r\n            {(formikProps) => (\r\n              <Form className={classes.root}>\r\n                <Grid container style={{ width: \"100%\" }} spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      name=\"hoTen\"\r\n                      label=\"Họ tên\"\r\n                      type=\"text\"\r\n                      onChange={formikProps.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      onChange={formikProps.handleChange}\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormikTextField\r\n                      onChange={formikProps.handleChange}\r\n                      name=\"soDt\"\r\n                      label=\"Số điện thoại\"\r\n                      type=\"text\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      onChange={formikProps.handleChange}\r\n                      name=\"taiKhoan\"\r\n                      label=\"Tài khoản\"\r\n                      type=\"text\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikTextField\r\n                      onChange={formikProps.handleChange}\r\n                      name=\"matKhau\"\r\n                      label=\"Mật khẩu\"\r\n                      type=\"password\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <FormikRadioGroup\r\n                  onChange={formikProps.handleChange}\r\n                  className={classes.formControlRadio}\r\n                  name=\"maLoaiNguoiDung\"\r\n                  items={radioList}\r\n                  label=\"Mã loại người dùng\"\r\n                  required\r\n                />\r\n                <FormikSelect\r\n                  onChange={formikProps.handleChange}\r\n                  name=\"maNhom\"\r\n                  items={dataSelect}\r\n                  label=\"Mã nhóm\"\r\n                  required\r\n                  value={initialValue.maNhom}\r\n                />\r\n                <>\r\n                  {titleModal.action === \"Thêm\" ? (\r\n                    <div className={classes.buttonGroup}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                      >\r\n                        Thêm\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          marginLeft: 10,\r\n                          backgroundColor: colors.red[500],\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={handleClose}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Thoát\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className={classes.buttonGroup}>\r\n                      <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                        CẬP NHẬT\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          marginLeft: 10,\r\n                          backgroundColor: colors.red[500],\r\n                          color: \"white\",\r\n                        }}\r\n                        onClick={handleClose}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Thoát\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.user.loading,\r\n    userList: state.user.userList,\r\n    errAdd: state.user.errAdd,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserPage);\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\Navbar\\index.js",["221"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { BarChart, AccountCircle, Movie } from \"@material-ui/icons\";\r\n\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst user = {\r\n  avatar: AccountCircle,\r\n  name: \"Quan tri\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/dashboard\",\r\n    icon: BarChart,\r\n    title: \"Trang chủ\",\r\n  },\r\n  {\r\n    href: \"/users\",\r\n    icon: AccountCircle,\r\n    title: \"Quản lý người dùng\",\r\n  },\r\n  {\r\n    href: \"/movies\",\r\n    icon: Movie,\r\n    title: \"Quản lý phim\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100%-64px)\",\r\n  },\r\n\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const { openMobile, onMobileClose } = props;\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const content = () => {\r\n    return (\r\n      <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n        <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            component={RouterLink}\r\n            to=\"/dashboard\"\r\n          />\r\n          <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n            {user.name}\r\n          </Typography>\r\n        </Box>\r\n        <Divider />\r\n        <Box p={2}>\r\n          <List>\r\n            {items.map((item) => (\r\n              <NavItem\r\n                href={item.href}\r\n                key={item.title}\r\n                title={item.title}\r\n                icon={item.icon}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content()}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content()}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default Navbar;\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\Logo.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\Dashboard\\index.jsx",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\Loader\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\dataSelect.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\pages\\userPageStyle.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\user.service.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikSelect.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikTextField.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\FormikRadioGroup.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\service\\movie.service.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\layout\\DashboardLayout\\Navbar\\NavItem.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\UserPage\\Toolbar.js",["222"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  button: {\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ handleClickOpen, handleSearch, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500} display=\"flex\" justifyContent=\"space-between\">\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Tìm kiếm người dùng\"\r\n                variant=\"outlined\"\r\n                onChange={handleSearch}\r\n              />\r\n              <Button\r\n                className={classes.button}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleClickOpen}\r\n              >\r\n                <AddIcon />\r\n              </Button>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Toolbar;\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\Page.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\pages\\moviePageStyle.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\redux\\actions\\movie.action.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\pages\\MoviePage\\Toolbar.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\CustomImageInput\\CustomImageInput.js",["223","224"],"import React, { Component } from \"react\";\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport { Error, Folder } from \"@material-ui/icons\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport customImageInputStyle from \"./CustomImageInputStyle\";\r\nimport classnames from \"classnames\";\r\n\r\nclass CustomImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fileUpload = React.createRef();\r\n    this.showFileUpload = this.showFileUpload.bind(this);\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    file: undefined,\r\n    imagePreviewUrl: undefined,\r\n  };\r\n\r\n  showFileUpload() {\r\n    if (this.fileUpload) {\r\n      this.fileUpload.current.click();\r\n    }\r\n  }\r\n\r\n  handleImageChange(event) {\r\n    event.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    if (file) {\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          imagePreviewUrl: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n      this.props.setFieldValue(this.props.field.name, file);\r\n      console.log(file);\r\n    }\r\n  }\r\n\r\n  showPreloadImage() {\r\n    const { errorMessage, classes } = this.props;\r\n    const { file, imagePreviewUrl } = this.state;\r\n\r\n    let comp = null;\r\n    if (errorMessage) {\r\n      comp = <Error style={{ fontSize: 36 }} />;\r\n    } else if (file) {\r\n      console.log(imagePreviewUrl);\r\n      comp = (\r\n        <img className={classes.avatarThumb} src={imagePreviewUrl} alt=\"Phim\" />\r\n      );\r\n    } else {\r\n      comp = <Folder style={{ fontSize: 36 }} />;\r\n    }\r\n    return comp;\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.fileUpload.current);\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage, title, classes, image } = this.props;\r\n    const { name, onBlur } = this.props.field;\r\n    const avatarStyle = classnames(\r\n      classes.bigAvatar,\r\n      this.state.file ? [classes.whiteBack] : [classes.primaryBack],\r\n      { [classes.errorBack]: errorMessage }\r\n    );\r\n    console.log(image);\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <input\r\n          className={classes.hidden}\r\n          id={name}\r\n          name={name}\r\n          type=\"file\"\r\n          onChange={this.handleImageChange}\r\n          ref={this.fileUpload}\r\n        />\r\n        <Typography className={classes.title} variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        <Avatar className={avatarStyle} onClick={this.showFileUpload}>\r\n          {this.showPreloadImage()}\r\n        </Avatar>\r\n\r\n        {errorMessage ? (\r\n          <Typography variant=\"caption\" color=\"error\">\r\n            {errorMessage}\r\n          </Typography>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(customImageInputStyle)(CustomImageInput);\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\utils\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\MovieCard\\index.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\FormilkCustomLayout\\CustomImageInput\\CustomImageInputStyle.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\assets\\jss\\admin-jss\\components\\movieCardStyle.js",[],"M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\CreateShowtimes\\index.js",["225","226","227","228","229","230","231","232","233"],"import React, { useState, useEffect, memo } from \"react\";\r\nimport format from \"date-format\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  colors,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport StickyHeadTable from \"../StickyHeadTable\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport {\r\n  getShowScheduleInformation,\r\n  getInformationByTheaterCluster,\r\n  createSchedule,\r\n  actCreateMovieSchedule,\r\n} from \"../../redux/actions/movie.action\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { FormikTextField } from \"../FormilkCustomLayout/FormikTextField\";\r\nimport { scheduleSchema } from \"../../service/movie.service\";\r\n// import StickyHeadTable from \"../StickyHeadTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    \"& .MuiTypography-h6\": {\r\n      fontSize: \"24px\",\r\n      color: theme.palette.primary.main,\r\n      textTransform: \"uppercase\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& .MuiFormHelperText-contained\": {\r\n      color: colors.red[500],\r\n      fontSize: \"16px\",\r\n    },\r\n  },\r\n\r\n  paper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    borderRadius: \"4px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"60%\",\r\n  },\r\n  input: {\r\n    margin: \"20px 0\",\r\n  },\r\n  errors: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst ShowTimeSchema = Yup.object().shape({\r\n  // maHeThongRap: Yup.string().required(\"Required\"),\r\n  // maCumRap: Yup.string().required(\"Required\"),\r\n  maRap: Yup.string().required(\"Required\"),\r\n  ngayChieuGioChieu: Yup.string().required(\"Required\"),\r\n  thoiLuong: Yup.string().required(\"Required\"),\r\n  giaVe: Yup.string().required(\"Required\"),\r\n});\r\nfunction CreateShowtimes({ maNhom, maPhim, tenPhim }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [maHeThong, setMaHeThong] = useState(null);\r\n  const [maCumR, setMaCumR] = useState(null);\r\n  const [listRaps, setListRaps] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const admin = JSON.parse(localStorage.getItem(\"UserAdmin\"));\r\n\r\n  const listHeThongRapChieu =\r\n    useSelector((state) => state?.movie?.infomatinShowTime) || \"\";\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getShowScheduleInformation(\r\n        () => {\r\n          setLoading(false);\r\n        },\r\n        () => {\r\n          alert(\"lỗi rồi\");\r\n        }\r\n      )\r\n    );\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (maHeThong) {\r\n      dispatch(\r\n        getInformationByTheaterCluster(\r\n          maHeThong,\r\n          () => {\r\n            setLoading(false);\r\n          },\r\n          () => {\r\n            alert(\"Lỗi hệ thống\");\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }, [maHeThong]);\r\n\r\n  const listCumRap =\r\n    useSelector((state) => state?.movie?.cinemaInformationTheater) || [];\r\n\r\n  useEffect(() => {\r\n    const listRap = listCumRap\r\n      .filter((item) => item.maCumRap === maCumR)\r\n      .map((item) => item.danhSachRap);\r\n    setListRaps(...listRap);\r\n  }, [maCumR]);\r\n\r\n  const [initialValue, setInitialValue] = useState({\r\n    maHeThongRap: \"\",\r\n    maCumRap: \"\",\r\n    maRap: \"\",\r\n    ngayChieuGioChieu: null,\r\n    thoiLuong: \"\",\r\n    maPhim: maPhim,\r\n    giaVe: \"\",\r\n  });\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setInitialValue({\r\n      maHeThongRap: \"\",\r\n      maCumRap: \"\",\r\n      maRap: 0,\r\n      ngayChieuGioChieu: null,\r\n      thoiLuong: 0,\r\n      maPhim: maPhim,\r\n      giaVe: 0,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = ({ maRap, ngayChieuGioChieu, giaVe, maPhim }) => {\r\n    // console.log(values);\r\n    const formatDate = format(\r\n      \"dd/MM/yyyy hh:mm:ss\",\r\n      new Date(ngayChieuGioChieu)\r\n    );\r\n\r\n    const data = { maRap, ngayChieuGioChieu: formatDate, giaVe, maPhim };\r\n    console.log(data);\r\n    dispatch(actCreateMovieSchedule(data));\r\n    setOpen(false);\r\n  };\r\n\r\n  const renderHtml = () => {\r\n    return (\r\n      <Formik\r\n        initialValues={initialValue}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={scheduleSchema}\r\n      >\r\n        {(formikProps) => {\r\n          // console.log(formikProps);\r\n          return (\r\n            <Form>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group text-left\">\r\n                    <label>Mã hệ thống rạp</label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                      name=\"maHeThongRap\"\r\n                      onChange={(e) => {\r\n                        setMaHeThong(e.target.value);\r\n                        formikProps.setFieldValue(\r\n                          \"maHeThongRap\",\r\n                          e.target.value\r\n                        );\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Chọn mã hệ thống rạp</option>\r\n                      {listHeThongRapChieu?.map((item, index) => (\r\n                        <option key={index} value={item.maHeThongRap}>\r\n                          {item.maHeThongRap}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <ErrorMessage name=\"maHeThongRap\">\r\n                      {(message) => (\r\n                        <div className=\"alert text-danger alert-validation \">\r\n                          {message}\r\n                        </div>\r\n                      )}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group text-left\">\r\n                    <label>Mã cụm rạp</label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                      name=\"maCumRap\"\r\n                      onChange={(e) => {\r\n                        setMaCumR(e.target.value);\r\n                        formikProps.setFieldValue(\"maCumRap\", e.target.value);\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Chọn mã cụm rạp</option>\r\n\r\n                      {listCumRap?.map((item, index) => (\r\n                        <option key={index} value={item.maCumRap}>\r\n                          {item.tenCumRap}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <ErrorMessage name=\"maCumRap\">\r\n                      {(message) => (\r\n                        <div className=\"alert text-danger alert-validation \">\r\n                          {message}\r\n                        </div>\r\n                      )}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group text-left\">\r\n                    <label>Mã rạp</label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                      name=\"maRap\"\r\n                      onChange={formikProps.handleChange}\r\n                    >\r\n                      <option value=\"\">Chọn mã rạp</option>\r\n                      {listRaps?.map((item, index) => (\r\n                        <option key={index} value={item.maRap}>\r\n                          {item.maRap}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <ErrorMessage name=\"maRap\">\r\n                      {(message) => (\r\n                        <div className=\"alert text-danger alert-validation \">\r\n                          {message}\r\n                        </div>\r\n                      )}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormikTextField\r\n                    style={{ marginTop: \"10px\" }}\r\n                    name=\"maPhim\"\r\n                    label=\"Mã phim\"\r\n                    type=\"text\"\r\n                    value={formikProps.values.maPhim}\r\n                    disabled\r\n                    onChange={formikProps.onChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDateTimePicker\r\n                      name=\"ngayChieuGioChieu\"\r\n                      label=\"Ngày chiếu giờ chiếu\"\r\n                      inputVariant=\"outlined\"\r\n                      format=\"dd/MM/yyyy hh:mm\"\r\n                      value={formikProps.values.ngayChieuGioChieu}\r\n                      onChange={(value) =>\r\n                        formikProps.setFieldValue(\"ngayChieuGioChieu\", value)\r\n                      }\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                      helperText={\r\n                        formikProps.errors[\"ngayChieuGioChieu\"]\r\n                          ? formikProps.errors[\"ngayChieuGioChieu\"]\r\n                          : undefined\r\n                      }\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <FormikTextField\r\n                    name=\"thoiLuong\"\r\n                    label=\"Thời lượng\"\r\n                    type=\"number\"\r\n                    onChange={formikProps.onChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <FormikTextField\r\n                    name=\"giaVe\"\r\n                    label=\"Giá vé\"\r\n                    type=\"number\"\r\n                    onChange={formikProps.onChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ fontSize: \"10px\" }}\r\n              >\r\n                Thêm lich chiếu\r\n              </Button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={handleOpen}\r\n          style={{ fontSize: \"10px\", outline: \"none\", border: \"none\" }}\r\n        >\r\n          Tạo lịch chiếu\r\n        </Button>\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          scroll=\"body\"\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n          className={classes.root}\r\n        >\r\n          <DialogTitle id=\"scroll-dialog-title\">\r\n            Tạo lịch chiếu phim\r\n            <br />\r\n            {tenPhim}\r\n          </DialogTitle>\r\n\r\n          <DialogContent style={{ overflowY: \"hidden\" }}>\r\n            <Box spacing={3}>\r\n              {renderHtml()}\r\n\r\n            \r\n            </Box>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default memo(CreateShowtimes);\r\n","M:\\DoAnCuoiKhoa\\admin-movie-fe-50\\react-admin-tixvn-fe50\\src\\components\\StickyHeadTable\\index.jsx",["234","235","236","237"],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":28,"column":6,"nodeType":"244","endLine":28,"endColumn":8,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":1,"column":1,"nodeType":"248","endLine":27,"endColumn":3},{"ruleId":"246","severity":1,"message":"249","line":1,"column":1,"nodeType":"248","endLine":35,"endColumn":3},{"ruleId":"250","severity":1,"message":"251","line":15,"column":3,"nodeType":"252","messageId":"253","endLine":15,"endColumn":28},{"ruleId":"250","severity":1,"message":"254","line":19,"column":3,"nodeType":"252","messageId":"253","endLine":19,"endColumn":21},{"ruleId":"250","severity":1,"message":"255","line":36,"column":8,"nodeType":"252","messageId":"253","endLine":36,"endColumn":16},{"ruleId":"242","severity":1,"message":"256","line":55,"column":6,"nodeType":"244","endLine":55,"endColumn":29,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":328,"column":31,"nodeType":"260","endLine":335,"endColumn":33},{"ruleId":"250","severity":1,"message":"261","line":46,"column":20,"nodeType":"252","messageId":"253","endLine":46,"endColumn":26},{"ruleId":"242","severity":1,"message":"256","line":52,"column":6,"nodeType":"244","endLine":52,"endColumn":8,"suggestions":"262"},{"ruleId":"242","severity":1,"message":"263","line":66,"column":6,"nodeType":"244","endLine":66,"endColumn":25,"suggestions":"264"},{"ruleId":"250","severity":1,"message":"265","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":25},{"ruleId":"250","severity":1,"message":"266","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":12},{"ruleId":"250","severity":1,"message":"267","line":71,"column":19,"nodeType":"252","messageId":"253","endLine":71,"endColumn":25},{"ruleId":"250","severity":1,"message":"268","line":14,"column":8,"nodeType":"252","messageId":"253","endLine":14,"endColumn":23},{"ruleId":"250","severity":1,"message":"269","line":19,"column":3,"nodeType":"252","messageId":"253","endLine":19,"endColumn":17},{"ruleId":"250","severity":1,"message":"270","line":25,"column":3,"nodeType":"252","messageId":"253","endLine":25,"endColumn":21},{"ruleId":"250","severity":1,"message":"271","line":69,"column":7,"nodeType":"252","messageId":"253","endLine":69,"endColumn":21},{"ruleId":"250","severity":1,"message":"272","line":80,"column":10,"nodeType":"252","messageId":"253","endLine":80,"endColumn":17},{"ruleId":"250","severity":1,"message":"273","line":85,"column":9,"nodeType":"252","messageId":"253","endLine":85,"endColumn":14},{"ruleId":"242","severity":1,"message":"256","line":101,"column":6,"nodeType":"244","endLine":101,"endColumn":12,"suggestions":"274"},{"ruleId":"242","severity":1,"message":"256","line":117,"column":6,"nodeType":"244","endLine":117,"endColumn":17,"suggestions":"275"},{"ruleId":"242","severity":1,"message":"276","line":127,"column":6,"nodeType":"244","endLine":127,"endColumn":14,"suggestions":"277"},{"ruleId":"250","severity":1,"message":"278","line":9,"column":3,"nodeType":"252","messageId":"253","endLine":9,"endColumn":9},{"ruleId":"250","severity":1,"message":"279","line":14,"column":8,"nodeType":"252","messageId":"253","endLine":14,"endColumn":18},{"ruleId":"250","severity":1,"message":"280","line":15,"column":10,"nodeType":"252","messageId":"253","endLine":15,"endColumn":20},{"ruleId":"242","severity":1,"message":"281","line":45,"column":6,"nodeType":"244","endLine":45,"endColumn":8,"suggestions":"282"},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["285"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'GET_MOVIE_SCHEDULE_FAILED' is defined but never used.","Identifier","unusedVar","'KeyboardTimePicker' is defined but never used.","'styleCss' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["286"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'errAdd' is assigned a value but never used.",["287"],"React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array.",["288"],"'useState' is defined but never used.","'Icon' is defined but never used.","'onBlur' is assigned a value but never used.","'StickyHeadTable' is defined but never used.","'createSchedule' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'ShowTimeSchema' is assigned a value but never used.","'loading' is assigned a value but never used.","'admin' is assigned a value but never used.",["289"],["290"],"React Hook useEffect has a missing dependency: 'listCumRap'. Either include it or remove the dependency array.",["291"],"'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},"Update the dependencies array to be: [props]",{"range":"309","text":"310"},"Update the dependencies array to be: [dispatch, movieAdd, movieUpdate]",{"range":"311","text":"312"},"Update the dependencies array to be: [dispatch]",{"range":"313","text":"314"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"315","text":"316"},"Update the dependencies array to be: [dispatch, open]",{"range":"317","text":"318"},"Update the dependencies array to be: [dispatch, maHeThong]",{"range":"319","text":"320"},"Update the dependencies array to be: [listCumRap, maCumR]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, id]",{"range":"323","text":"324"},[850,852],"[props]",[1874,1897],"[dispatch, movieAdd, movieUpdate]",[1628,1630],"[dispatch]",[1230,1249],"[location.pathname, onMobileClose, openMobile]",[2911,2917],"[dispatch, open]",[3212,3223],"[dispatch, maHeThong]",[3508,3516],"[listCumRap, maCumR]",[1269,1271],"[dispatch, id]"]